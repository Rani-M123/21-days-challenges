{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Netflix-Clone\\\\my-app\\\\src\\\\Components\\\\Forms.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport './Forms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forms = () => {\n  _s();\n  const profile = useForm();\n  console.log(profile.watch(\"lastname\"));\n  console.log(profile.formState.errors);\n  const onSubmitForm = data => {\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: profile.handleSubmit(onSubmitForm),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"firstname\",\n      ...profile.register('firstname', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", profile.formState.errors.firstname && profile.formState.errors.firstname.type === \"required\" ? \"this is required\" : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"lastname\",\n      ...profile.register('lastname', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Forms, \"yNa9ZyeBMp7oQXytLq2VTcVdRog=\", false, function () {\n  return [useForm];\n});\n_c = Forms;\nexport default Forms;\n// import { useForm } from 'react-hook-form'\n// import { useState } from 'react';\n\n// export function App() {\n//   const { register, handleSubmit } = useForm();\n//   const [data, setData] = useState(\"\");\n//   return(\n//     <form onSubmit={handleSubmit((data) => setData(JSON.stringify(data)))}>\n//       <input {...register(\"firstName\")} placeholder=\"First name\" />\n//       <select {...register(\"category\", { required: true })}>\n//         <option value=\"\">Select...</option>\n//         <option value=\"A\">Option A</option>\n//         <option value=\"B\">Option B</option>\n//       </select>\n//       <textarea {...register(\"aboutYou\")} placeholder=\"About you\" />\n//       <p>{data}</p>\n//       <input type=\"submit\" />\n//     </form>  \n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"names":["React","useForm","Forms","profile","console","log","watch","formState","errors","onSubmitForm","data","handleSubmit","register","required","firstname","type"],"sources":["C:/Users/Dell/Desktop/Netflix-Clone/my-app/src/Components/Forms.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nimport './Forms.css';\r\n\r\n  const Forms = () => {\r\n\r\n  const profile = useForm();\r\n  console.log(profile.watch(\"lastname\"));\r\n  console.log(profile.formState.errors)\r\n\r\n  const onSubmitForm = (data) => {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={profile.handleSubmit(onSubmitForm)}>\r\n\r\n      <input type=\"text\" placeholder='firstname'  {...profile.register('firstname', {required:true})}/>\r\n      <p> {profile.formState.errors.firstname && profile.formState.errors.firstname.type === \"required\" ? \"this is required\" :''}</p>\r\n\r\n      <input type=\"text\" placeholder='lastname'  {...profile.register('lastname', {required:true})}/>\r\n\r\n      <button type='submit'>submit</button>\r\n    </form>\r\n  )\r\n}\r\nexport default Forms;\r\n// import { useForm } from 'react-hook-form'\r\n// import { useState } from 'react';\r\n \r\n// export function App() {\r\n//   const { register, handleSubmit } = useForm();\r\n//   const [data, setData] = useState(\"\");\r\n//   return(\r\n//     <form onSubmit={handleSubmit((data) => setData(JSON.stringify(data)))}>\r\n//       <input {...register(\"firstName\")} placeholder=\"First name\" />\r\n//       <select {...register(\"category\", { required: true })}>\r\n//         <option value=\"\">Select...</option>\r\n//         <option value=\"A\">Option A</option>\r\n//         <option value=\"B\">Option B</option>\r\n//       </select>\r\n//       <textarea {...register(\"aboutYou\")} placeholder=\"About you\" />\r\n//       <p>{data}</p>\r\n//       <input type=\"submit\" />\r\n//     </form>  \r\n//   );\r\n// }\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAO,aAAa;AAAC;AAEnB,MAAMC,KAAK,GAAG,MAAM;EAAA;EAEpB,MAAMC,OAAO,GAAGF,OAAO,EAAE;EACzBG,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,KAAK,CAAC,UAAU,CAAC,CAAC;EACtCF,OAAO,CAACC,GAAG,CAACF,OAAO,CAACI,SAAS,CAACC,MAAM,CAAC;EAErC,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7BN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;EACnB,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEP,OAAO,CAACQ,YAAY,CAACF,YAAY,CAAE;IAAA,wBAEjD;MAAO,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC,WAAW;MAAA,GAAMN,OAAO,CAACS,QAAQ,CAAC,WAAW,EAAE;QAACC,QAAQ,EAAC;MAAI,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAG,eACjG;MAAA,WAAG,GAAC,EAACV,OAAO,CAACI,SAAS,CAACC,MAAM,CAACM,SAAS,IAAIX,OAAO,CAACI,SAAS,CAACC,MAAM,CAACM,SAAS,CAACC,IAAI,KAAK,UAAU,GAAG,kBAAkB,GAAE,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAE/H;MAAO,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC,UAAU;MAAA,GAAMZ,OAAO,CAACS,QAAQ,CAAC,UAAU,EAAE;QAACC,QAAQ,EAAC;MAAI,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAG,eAE/F;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEX,CAAC;AAAA,GArBOX,KAAK;EAAA,QAEKD,OAAO;AAAA;AAAA,KAFjBC,KAAK;AAsBb,eAAeA,KAAK;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}